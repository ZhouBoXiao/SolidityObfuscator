T__50=50
NonEscapeCharacter=44
DecimalNumber=27
T__59=59
T__55=55
InternalKeyword=7
T__56=56
T__57=57
T__58=58
T__51=51
T__137=137
T__52=52
T__136=136
T__53=53
T__54=54
T__138=138
T__133=133
T__132=132
T__60=60
T__135=135
T__61=61
T__134=134
T__131=131
T__130=130
ViewKeyword=15
HexDigit=31
LINE_COMMENT=47
StringLiteral=5
Byte=19
T__66=66
CharacterEscapeSequence=40
T__67=67
T__129=129
T__68=68
T__69=69
T__62=62
T__126=126
T__63=63
T__125=125
T__64=64
T__128=128
T__65=65
T__127=127
UnicodeEscapeSequence=42
DecimalDigit=22
COMMENT=46
PrivateKeyword=8
IdentifierPart=35
Uint=18
Char=36
BreakKeyword=25
PublicKeyword=6
Fixed=20
VersionLiteral=4
T__49=49
HexLiteral=24
T__91=91
T__100=100
T__92=92
T__93=93
T__102=102
T__94=94
T__101=101
T__90=90
LT=10
ReservedKeyword=33
Identifier=30
T__99=99
HexNumber=28
T__95=95
T__96=96
T__97=97
T__98=98
ContinueKeyword=26
HexEscapeSequence=41
SingleEscapeCharacter=43
HexPair=32
PayableKeyword=16
PureKeyword=14
T__122=122
T__70=70
T__121=121
T__71=71
T__124=124
T__72=72
T__123=123
T__120=120
ConstantKeyword=9
BooleanLiteral=23
Int=17
AnonymousKeyword=12
T__77=77
T__119=119
T__78=78
T__118=118
IdentifierStart=34
T__79=79
T__73=73
T__115=115
WS=48
T__74=74
T__114=114
T__75=75
T__117=117
T__76=76
T__116=116
T__80=80
T__111=111
T__81=81
T__110=110
T__82=82
T__113=113
IndexedKeyword=13
T__83=83
T__112=112
Ufixed=21
EscapeSequence=39
ExternalKeyword=11
DoubleStringCharacter=37
T__88=88
T__108=108
T__89=89
T__107=107
T__109=109
T__84=84
T__104=104
T__85=85
T__103=103
T__86=86
T__106=106
SingleStringCharacter=38
EscapeCharacter=45
T__87=87
T__105=105
NumberUnit=29
'import'=59
'-'=105
'assembly'=92
')'=70
'else'=90
'modifier'=75
'%'=111
'string'=99
'=>'=85
'!'=108
'>'=54
'bool'=98
'address'=80
'--'=103
'|'=115
'=='=116
'contract'=65
'['=81
':'=121
'throw'=95
'case'=136
'->'=138
'payable'=16
'.'=83
'emit'=96
'*'=60
'is'=68
'switch'=135
'&'=114
'from'=61
'break'=25
'<='=56
'event'=78
'enum'=79
'?'=120
':='=133
'if'=89
'}'=64
'=:'=134
'<<'=112
';'=50
'||'=119
'>>='=126
'using'=71
'return'=94
'&='=124
'as'=58
'continue'=26
'/'=110
'*='=129
'struct'=73
'mapping'=84
'+'=104
'function'=76
'returns'=77
'let'=132
'calldata'=88
'~'=52
']'=82
'<'=55
'++'=102
'>='=53
'var'=97
'memory'=86
'after'=106
'/='=130
','=63
'-='=128
'('=69
'do'=93
'constructor'=74
'|='=122
'delete'=107
'^'=51
'for'=72
'<<='=125
'='=57
'byte'=100
'**'=109
'>>'=113
'&&'=118
'^='=123
'pragma'=49
'{'=62
'while'=91
'!='=117
'storage'=87
'new'=101
'interface'=66
'library'=67
'%='=131
'+='=127
'default'=137
